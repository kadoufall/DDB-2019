<?xml version="1.0" ?>
<!DOCTYPE tests [
        <!ELEMENT tests (test)+>
        <!ATTLIST tests
                totalpoints CDATA "100">
        <!ELEMENT test (#PCDATA)>
        <!ATTLIST test
                id         ID            #REQUIRED
                cleardata  (true|false)  "true"
                fpoints    CDATA         "3"
                fnext      IDREF         #IMPLIED>
        ]>

<!-- Project Part 1 -->

<tests totalpoints="100">

    <!-- Basic tests -->

    <test id="Start" fpoints="100" fnext="_END_">
        start() call fails.
    </test>

    <test id="StartCommit" fpoints="100" fnext="_END_">
        Cannot commit a non-op transaction.
    </test>

    <test id="StartAbort" fpoints="100" fnext="_END_">
        Cannot abort a non-op transaction.
    </test>

    <test id="DataAdd" fpoints="100" fnext="_END_">
        Cannot add flight/rooms/cars/customer.
    </test>

    <test id="DataAddCommit" fpoints="100" fnext="_END_">
        commit fails after adding flight/rooms/cars/customer.
    </test>

    <test id="QueryforDataAddCommit" fpoints="100" fnext="_END_">
        Query of flight/rooms/cars/customer does not return correct result.
    </test>

    <test id="DataAddCommitReserve" fpoints="100" fnext="_END_">
        Cannot make reservations.
    </test>

    <test id="DataAddAbort" fpoints="100" fnext="_END_">
        abort fails after adding flight/rooms/cars/customer.
    </test>

    <test id="QueryforDataAddAbort" fpoints="100" fnext="_END_">
        Query of flight/rooms/cars/customer does not return correct result after an abort.
    </test>


    <!-- Semantic tests -->

    <test id="AddCommitDeleteCommit" fpoints="10">
        Cannot delete items.
    </test>

    <test id="QueryforBill">
        Does not compute correct bill.
    </test>

    <test id="Siticmt">
        query result incorrect after reserveItinerary commits.
    </test>

    <test id="Sitiabt">
        query result incorrect after reserveItinerary aborts.
    </test>

    <test id="Sitifail">
        state is not restored after reserveItinerary fails.
    </test>

    <test id="QueryforAdd">
        Cannot query items added earlier in same transaction.
    </test>

    <test id="BadXid">
        Bogus xid does not throw InvalidTransactionException.
    </test>


    <!-- Locking tests -->

    <test id="Lconc" fpoints="5">
        Two non-conflicting concurrent transactions fail.
    </test>

    <test id="Liti1">
        reserveItinerary does not acquire all necessary locks.
    </test>

    <test id="Liti2">
        reserveItinerary does not acquire all necessary locks.
    </test>

    <test id="Liti3">
        reserveItinerary does not acquire all necessary locks.
    </test>

    <test id="Ldeadlock" fpoints="5">
        Deadlocked transaction is not aborted.
    </test>


    <!-- Failure tests -->

    <test id="DieAll" fpoints="5">
        After all components fail, previous committed transactions are lost.
    </test>

    <test id="DieRM" fpoints="5">
        After RM fails, transaction is not forcibly aborted.
    </test>

    <test id="DieWC" fpoints="5">
        After WC fails, transaction cannot be committed.
    </test>

    <test id="DieTM" fpoints="5">
        After TM fails, transaction is not forcibly aborted.
    </test>

    <test id="DieRMAfterEnlist" fpoints="5">
        dieRMAfterEnlist: transaction is not forcibly aborted.
    </test>

    <test id="DieRMBeforePrepare" fpoints="5">
        dieRMBeforePrepare: transaction is not forcibly aborted.
    </test>

    <test id="DieRMAfterPrepare" fpoints="5">
        dieRMAfterPrepare: transaction is not forcibly aborted.
    </test>

    <test id="DieTMBeforeCommit" fpoints="5">
        dieTMBeforeCommit: transaction is not forcibly aborted.
    </test>

    <test id="DieTMAfterCommit" fpoints="5">
        dieTMAfterCommit: transaction is not committed.
    </test>

    <test id="DieRMBeforeCommit" fpoints="5">
        dieRMBeforeCommit: RM does not recover properly.
    </test>

    <test id="Unlock" fpoints="5">
        RM releases locks before final commit.
    </test>

    <!--Custom tests-->

    <test id="AddDelete" fpoints='0'>
        basic delete
    </test>

    <test id="AddChange" fpoints='0'>
        basic data updating
    </test>

    <test id="Atomicity" fpoints='0'>
        Atomicity
    </test>

    <test id="Consistency" fpoints='0'>
        Consistency
    </test>

    <test id="Isolation" fpoints='0'>
        Isolation
    </test>

    <test id="Durability" fpoints='0'>
        Durability
    </test>

</tests>
